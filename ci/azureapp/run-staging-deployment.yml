name: 'run-staging-deployment'
trigger: ['none']
resources:
  pipelines:
  - pipeline: 'run-staging-deployment'
    source: 'build-azureapp-on-changes'
    trigger: true

variables:
  # These variables are set during runtime.
  revision:
  version:
  acrEnvironment: 'management'
  acrStage:       'truehhart'
  location:     'westeurope'
  environment:  'staging'
  stage:        'truehhart'
  appName:      'azureapp'
  subscriptionName: 'main'

stages:
- stage: 'deploy_to_staging'
  jobs:
  - job: 'release_application_to_staging'
    pool: 'localhost'
    steps:
      # Unfortunately, I hasn't found a way for AzPipelines to reliably pass information between pipelines, but I still wanted to have them separate.
      # So we repeat the tasks to get build version from the previous pipeline.
      - task: CmdLine@2
        displayName: '[Build] Getting current source version'
        inputs:
          workingDirectory: '$(Build.Repository.LocalPath)'
          script: 'version=`cat ./src/$(appName)/.version`; echo "##vso[task.setvariable variable=version]$version"'
      - task: CmdLine@2
        displayName: '[Build] Getting current git revision'
        inputs:
          script: 'revision=`echo "$(Build.SourceVersion)" | head -c 7`; echo "##vso[task.setvariable variable=revision]$revision"'

      # Now we deploy a WebApp to Azure App Service. The ARM template provided also creates the App Service Plan for the application
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: '[Azure] Deploying ${{ variables.appName }} App Service to ${{ variables.environment }}-${{ variables.stage }}'
        inputs:
          deploymentScope: 'Resource Group'
          templateLocation: 'Linked artifact'
          csmFile:  '$(Build.Repository.LocalPath)/infrastructure/resourceDefinitions/azureAppService.json'
          ConnectedServiceName: '$(subscriptionName)-sc'
          resourceGroupName: '$(environment)-$(stage)-rg'
          location: '$(location)'
          overrideParameters: '-appName $(appName) -acrEnvironment $(acrEnvironment) -acrStage $(acrStage) -environment "$(environment)" -stage "$(stage)" -location $(location)'

      # Deploy App Service
      - task: AzureRmWebAppDeployment@3
        displayName: '[Deploy] Deploying $(appName) to $(environment)-$(stage)'
        inputs:
          ConnectedServiceName: '$(subscriptionName)-sc'
          appType: 'applinux'
          WebAppName: '$(environment)-$(stage)-$(appName)'
          DockerNamespace: '$(environment)$(stage)acr.azurecr.io'
          DockerRepository: '$(Build.Repository.Name)'
          DockerImageTag: '$(version).$(revision)'
          WebAppUri: webAppUrl
          TakeAppOfflineFlag: true
          UseWebDeploy: true
          RenameFilesFlag: true
          AppSettings: '-HTTP_LISTEN_PORT 8080 -APP_MESSAGE "Hello world from $(environment)" -APP_ENVIRONMENT "$(environment)-$(stage)" -APP_REVISION=$(version)$(revision)'