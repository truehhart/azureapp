# This job should be run one time on a per-environment.
# It creates the Resource Group, the Service Application, Service App Plan, User-Managed Identity Role, etc.
trigger: ['none']

name: 'prepare-azureapp-infrastructure'

parameters:
  - name: 'environment'
    type: 'string'
    default: 'staging'
  - name: 'stage'
    type: 'string'
    default: 'truehhart'
  - name: 'location'
    type: 'string'
    default: 'westeurope'

variables:
  vmImage: 'ubuntu-latest'
  acrEnvironment: 'management'
  acrStage:       '${{ parameters.stage }}'
  appName:      'azureapp'
  subscriptionName: 'main'

stages:
# This pipeline deploys the only needed infrastructure for the project:
# - The management resource group.
# - The management container registry.
# These resources will be reused across the project to host the app that's built.
- stage: 'prepare_infrastructure'
  displayName: 'Deploying Management Infrastructure'
  jobs:
  - job: 'deploy_azure_resources'
    displayName: 'Deploying Azure Resources'
    pool: 
      vmImage: $(vmImage)
    steps:
      # Now we deploy a WebApp to Azure App Service.
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: '[Azure] Deploying ${{ variables.appName }} App Service to ${{ parameters.environment }}-${{ parameters.stage }}'
        inputs:
          deploymentScope: 'Resource Group'
          templateLocation: 'Linked artifact'
          csmFile:  '$(Build.Repository.LocalPath)/infrastructure/resourceDefinitions/azureAppService.json'
          ConnectedServiceName: '$(subscriptionName)-sc'
          resourceGroupName: '${{ parameters.environment }}-${{ parameters.stage }}-rg'
          location: '${{ parameters.location }}'
          overrideParameters: '-appName $(appName) -acrEnvironment $(acrEnvironment) -acrStage $(acrStage) -environment "${{ parameters.environment }}" -stage "${{ parameters.stage }}" -location ${{ parameters.location }}'